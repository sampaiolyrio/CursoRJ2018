),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(skin = "black"
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(skin = "black",
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(skin = "green",
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
install.packages("shinythemes")
require(shinythemes)
shinyApp(
ui = fluidPage(
shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
sidebarPanel(
textInput("txt", "Text input:", "text here"),
sliderInput("slider", "Slider input:", 1, 100, 30),
actionButton("action", "Button"),
actionButton("action2", "Button2", class = "btn-primary")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1"),
tabPanel("Tab 2")
)
)
),
server = function(input, output) {}
)
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(skin = "green",
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(skin = "green",
shinythemes::themeSelector(),
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(shinythemes::themeSelector(),
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Box title", width = NULL, status = "primary",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(shinytheme("cerulean"),
dashboardHeader(title = "Column layout"),
dashboardSidebar(),
body
)
# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { })
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
tabela_medica <- data.frame(nome = c("Ana","Bia","Carol","Daniela","Fernanda"),
idade = c(30,40,50,60,70),
numeroconsultas = c(3,7,1,6,2),
tem_plano=c(TRUE,FALSE,FALSE,TRUE,TRUE))
tabela_medica
soma2 <- function(X1){
X1 + 2
}
soma2(10)
soma2(c(10,100,1000))
soma2("vinte")
seq(0,1,by=.2)
teste <- c(0,.2,.4,.6,.8,1)
aa <- seq(0,1,by=.2)
aa == teste
identical(teste,aa)
all.equal(teste,aa)
all.equal(teste,aa)
isTRUE(all.equal(teste,aa))
isTRUE(2)
isTRUE(1)
isTRUE(T)
isTRUE("TRUE")
tabela_medica
valor_devido <- function(pessoa){
if(pessoa$tem_plano == TRUE){
return(0)
}else{
return(pessoa$numeroconsultas * 150.00)
}
}
valor_devido <- function(pessoa){
if(pessoa$tem_plano == TRUE){
return(0)
}else{
return(pessoa$numeroconsultas * 150.00)
}
}
tabela_medica
valor_devido(tabela_medica[1,])
apply(tabela_medica, 1, valor_devido)
tabela_medica
valor_devido <- function(pessoa){
if(pessoa[4] == TRUE){
return(0)
}else{
return(pessoa[3] * 150.00)
}
}
tabela_medica
valor_devido(tabela_medica[1,])
valor_devido(tabela_medica[2,])
valor_devido(tabela_medica[2,])
tabela_medica
mapply(valor_devido,tabela_medica)
lapply(tabela_medica, valor_devido)
lapply(tabela_medica, valor_devido)
lapply(tabela_medica, print)
is.list(tabela_medica)
-1.64+50
sample(rep(paste("T",1:9,sep=""),4))
sample(rep(paste("T",1:9,sep=""),1))
sample(rep(paste("T",1:9,sep=""),1))
sample(rep(paste("T",1:9,sep=""),1))
sample(rep(paste("T",1:9,sep=""),1))
dados5.1 <- c(130,74,150,159,138,168,
155,180,188,126,110,160,
34,80,136,106,174,150,
40,75,122,115,120,139,
20,82,25,58,96,82,
70,58,70,45,104,60)
rep(rep(c(1,2,3),each=2),6)
experimento <- data.frame(tempo = dados5.1,
temperatura =as.factor(temperatura),
material = as.factor(material))
dados5.1 <- c(130,74,150,159,138,168,
155,180,188,126,110,160,
34,80,136,106,174,150,
40,75,122,115,120,139,
20,82,25,58,96,82,
70,58,70,45,104,60)
temperatura <- rep(c(15,70,125),each=12)
material <- rep(c(1,1,2,2,3,3),6)
rep(rep(c(1,2,3),each=2),6)
experimento <- data.frame(tempo = dados5.1,
temperatura =as.factor(temperatura),
material = as.factor(material))
experimento
experimento <- data.frame(tempo = dados5.1,
temperatura =as.factor(temperatura),
material = as.factor(material))
mod <- aov(tempo~temperatura*material,experimento)
mod <- aov(tempo~temperatura*material,experimento)
mod1 <- aov(tempo~temperatura+material+(temperatura:material),experimento)
summary(mod)
boxplot(dados5.1~temperatura)
boxplot(dados5.1~material)
interaction.plot(temperatura,as.factor(material),dados5.1)
interaction.plot(temperatura,as.factor(material),dados5.1)
summary(mod)
summary(mod)
dados1 <- experimento[experimento$temperatura==15,]
dados1
m1 <- aov(tempo~material,data=dados1)
summary(m1)
summary(mod1)
fobs <- 443.1/675
fobs
1-pf(.65,2,27)
dados2 <- experimento[experimento$temperatura==70,]
dados3 <- experimento[experimento$temperatura==125,]
m2 <- aov(tempo~material,data=dados2)
summary(m2)
summary(mod)
fobs <- 8276/675
1-pf(fobs,2,27)
dados3 <- experimento[experimento$temperatura==125,]
m3 <- aov(tempo~material,data=dados3)
summary(m3)
1-pf(1429.3/675,2,27)
summary(mod)
summary(mod)
summary(m1)
summary(m2)
summary(m3)
summary(m1)[[1]][[2]][1]+summary(m2)[[1]][[2]][1]+summary(m3)[[1]][[2]][1]
sum(summary(mod)[[1]][[2]][2:3])
experimento
(rep(c("T1","T2","T3"),2),rep(c("T4","T5","T6"),2),rep(c("T7","T8","T9"),2))
c(rep(c("T1","T2","T3"),2),rep(c("T4","T5","T6"),2),rep(c("T7","T8","T9"),2))
experimento$tratamento <- c(rep(c("T1","T2","T3"),2),rep(c("T4","T5","T6"),2),rep(c("T7","T8","T9"),2))
experimento
c(rep(rep(c("T1","T2","T3"),each=2),2),rep(rep(c("T4","T5","T6"),each=2),2),rep(rep(c("T7","T8","T9"),each=2),2))
experiemnto$tratamento <- c(rep(rep(c("T1","T2","T3"),each=2),2),rep(rep(c("T4","T5","T6"),each=2),2),rep(rep(c("T7","T8","T9"),each=2),2))
experimento$tratamento <- c(rep(rep(c("T1","T2","T3"),each=2),2),rep(c("T4","T5","T6"),2),rep(c("T7","T8","T9"),2))e
experimento
experimento$tratamento <- c(rep(rep(c("T1","T2","T3"),each=2),2),rep(rep(c("T4","T5","T6"),each=2),2),rep(rep(c("T7","T8","T9"),each=2),2))
experimento
summary()
modeloTrat <- aov(tempo~tratamento,experimento)
summary(modeloTrat)
summry(mod)
summary(mod)
TukeyHSD(mod)
TukeyHSD(modeloTrat)
boxplot(experimento$tempo ~ experimento$tratamento)
interaction.plot(as.factor(material),temperatura,dados5.1)
interaction.plot(as.factor(material),temperatura,dados5.1)
boxplot(dados5.1~temperatura)
summary(mod)
?read.tabel
?read.table
setwd("~/Dropbox/AAAUNB/Extensao/RJ_TRT/Material")
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
camaroes <- read.table("dadoscamarao.txt", head = TRUE, dec=",")
head(camaroes)
dir
dir()
copa <- read.table("dados/InmetCopacabana.txt", head=TRUE, sep=",")
head(copa)
